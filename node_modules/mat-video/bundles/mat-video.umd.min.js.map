{
  "version": 3,
  "file": "mat-video.umd.min.js",
  "sources": [
    "ng://mat-video/node_modules/tslib/tslib.es6.js",
    "ng://mat-video/out/app/video/services/event.service.ts",
    "ng://mat-video/out/app/video/video.component.ts",
    "ng://mat-video/out/app/video/directives/mat-video-source.directive.ts",
    "ng://mat-video/out/app/video/directives/mat-video-track.directive.ts",
    "ng://mat-video/out/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts",
    "ng://mat-video/out/app/video/pipes/seconds-to-time.pipe.ts",
    "ng://mat-video/out/app/video/services/fullscreen.service.ts",
    "ng://mat-video/out/app/video/ui/mat-download-button/mat-download-button.component.ts",
    "ng://mat-video/out/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts",
    "ng://mat-video/out/app/video/ui/mat-play-button/mat-play-button.component.ts",
    "ng://mat-video/out/app/video/ui/mat-quality-control/mat-quality-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-time-control/mat-time-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts",
    "ng://mat-video/out/app/video/ui/mat-volume-control/mat-volume-control.component.ts",
    "ng://mat-video/out/app/video/video.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Injectable, Renderer2 } from '@angular/core';\r\nimport { EventHandler } from '../interfaces/event-handler.interface';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n    constructor() { }\r\n\r\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\r\n        for (const event of events)\r\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\r\n    }\r\n\r\n    removeEvents(events: EventHandler[]): void {\r\n        for (const event of events)\r\n            if (event.dispose)\r\n                event.dispose();\r\n    }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventHandler } from './interfaces/event-handler.interface';\r\nimport { EventService } from './services/event.service';\r\n\r\n@Component({\r\n    selector: 'mat-video',\r\n    template: `<div #player class=\"videoplayer\" [ngClass]=\"getOverlayClass('show-mouse', 'hide-mouse')\">\r\n    <div class=\"header\" *ngIf=\"title\" [ngClass]=\"getOverlayClass('visible', 'hidden')\">\r\n        {{title}}\r\n    </div>\r\n\r\n    <video #video class=\"video\" [attr.src]=\"src ? src : null\" [attr.autoplay]=\"autoplay ? true : null\" [preload]=\"preload ? 'auto' : 'metadata'\"\r\n        [attr.poster]=\"poster ? poster : null\" [attr.loop]=\"loop ? loop : null\">\r\n        <ng-content select=\"source\"></ng-content>\r\n        <ng-content select=\"track\"></ng-content>\r\n        This browser does not support HTML5 video.\r\n    </video>\r\n\r\n    <div class=\"controls\" *ngIf=\"videoLoaded\" [ngClass]=\"getOverlayClass('visible', 'hidden')\">\r\n        <div class=\"progress\">\r\n            <mat-seek-progress-control [color]=\"color\" [video]=\"video\"></mat-seek-progress-control>\r\n        </div>\r\n\r\n        <div class=\"menu\">\r\n            <div class=\"left\">\r\n                <mat-play-button (playChanged)=\"playing = $event\" [video]=\"video\"></mat-play-button>\r\n\r\n                <mat-volume-control [color]=\"color\" [video]=\"video\"></mat-volume-control>\r\n\r\n                <mat-time-control [video]=\"video\"></mat-time-control>\r\n            </div>\r\n\r\n            <div class=\"right\">\r\n                <mat-quality-control *ngIf=\"quality\" [video]=\"video\"></mat-quality-control>\r\n\r\n                <mat-download-button *ngIf=\"download\" [title]=\"title\" [video]=\"video\"></mat-download-button>\r\n\r\n                <mat-fullscreen-button *ngIf=\"fullscreen\" (fullscreenChanged)=\"isFullscreen = $event\" [player]=\"player\"></mat-fullscreen-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <mat-video-spinner [spinner]=\"spinner\" [video]=\"video\"></mat-video-spinner>\r\n</div>`,\r\n    styles: [`.videoplayer{font-family:Roboto,\"Helvetica Neue\",sans-serif;background-color:#000;position:relative;width:100%;height:100%}.header{color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;left:0;top:14px;width:100%;z-index:1}.video{display:block;width:100%;height:100%;z-index:0}.controls{color:#fff;position:absolute;left:0;bottom:0;width:100%;z-index:1}.controls .progress{height:26px}.controls .menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:48px}.controls .menu .left{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.controls .menu .right{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.visible{visibility:visible;opacity:1;-webkit-transition:opacity .5s linear;transition:opacity .5s linear}.hidden{visibility:hidden;opacity:0;-webkit-transition:visibility 0s .5s,opacity .5s linear;transition:visibility 0s .5s,opacity .5s linear}.show-mouse{cursor:default}.hide-mouse{cursor:none}`, `@font-face{font-family:'Material Icons';font-style:normal;font-weight:400;src:url(https://fonts.gstatic.com/s/materialicons/v36/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2) format('woff2')}::ng-deep.material-icons{font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;font-feature-settings:'liga';-webkit-font-feature-settings:'liga';-webkit-font-smoothing:antialiased}`]\r\n})\r\nexport class MatVideoComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild('player') private player: ElementRef;\r\n    @ViewChild('video') private video: ElementRef;\r\n\r\n    @Input() src: string = null;\r\n    @Input() title: string = null;\r\n    @Input() autoplay: boolean = false;\r\n    @Input() preload: boolean = true;\r\n    @Input() loop: boolean = false;\r\n    @Input() quality: boolean = true;\r\n    @Input() fullscreen: boolean = true;\r\n    @Input() download: boolean = false;\r\n    @Input() color: ThemePalette = 'primary';\r\n    @Input() spinner: string = 'spin';\r\n    @Input() poster: string = null;\r\n\r\n    playing: boolean = false;\r\n\r\n    isFullscreen: boolean = false;\r\n\r\n    videoWidth: number;\r\n    videoHeight: number;\r\n\r\n    videoLoaded = false;\r\n\r\n    private isMouseMoving: boolean = false;\r\n    private isMouseMovingTimer: NodeJS.Timer;\r\n    private isMouseMovingTimeout: number = 2000;\r\n\r\n    private events: EventHandler[];\r\n\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private evt: EventService\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.events = [\r\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\r\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\r\n        ];\r\n\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n\r\n    load(): void {\r\n        if (this.video && this.video.nativeElement)\r\n            this.video.nativeElement.load();\r\n    }\r\n\r\n    getVideoTag(): HTMLVideoElement | null {\r\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\r\n    }\r\n\r\n    evLoadedMetadata(event: any): void {\r\n        this.videoWidth = this.video.nativeElement.videoWidth;\r\n        this.videoHeight = this.video.nativeElement.videoHeight;\r\n        this.videoLoaded = true;\r\n    }\r\n\r\n    evMouseMove(event: any): void {\r\n        this.isMouseMoving = true;\r\n        clearTimeout(this.isMouseMovingTimer);\r\n        this.isMouseMovingTimer = setTimeout(() => {\r\n            this.isMouseMoving = false;\r\n        }, this.isMouseMovingTimeout);\r\n    }\r\n\r\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\r\n        return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\r\n    }\r\n\r\n}\r\n",
    "import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n",
    "import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { MatVideoComponent } from '../video.component';\r\n\r\n@Directive({\r\n    selector: '[matVideoTrack]'\r\n})\r\nexport class MatVideoTrackDirective implements OnChanges {\r\n    @Input() src: string = null;\r\n    @Input() kind: string = null;\r\n    @Input() srclang: string = null;\r\n    @Input() label: string = null;\r\n\r\n    private init = true;\r\n    private video: MatVideoComponent;\r\n    private track: HTMLTrackElement;\r\n\r\n    constructor(\r\n        @Host() private matVideoComponent: MatVideoComponent,\r\n        private el: ElementRef\r\n    ) {\r\n        this.video = matVideoComponent;\r\n        this.track = el.nativeElement;\r\n        this.init = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.track.src = this.src;\r\n        this.track.kind = this.kind;\r\n        this.track.srclang = this.srclang;\r\n        this.track.label = this.label;\r\n\r\n        if (!this.init)\r\n            this.video.load();\r\n    }\r\n\r\n}\r\n",
    "import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\r\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\n\r\n/** Counter used to generate unique IDs for progress bars. */\r\nlet sliderprogressbarId = 0;\r\n\r\n@Component({\r\n    selector: 'mat-slider-progress-bar',\r\n    template: `<div class=\"mat-slider-wrapper\" #sliderWrapper>\r\n    <div class=\"mat-slider-track-wrapper\">\r\n        <svg width=\"100%\" height=\"2\" focusable=\"false\" class=\"mat-slider-progress-background\">\r\n            <defs>\r\n                <pattern [id]=\"sliderprogressbarId\" x=\"2.5\" y=\"0\" width=\"5\" height=\"2.5\" patternUnits=\"userSpaceOnUse\">\r\n                    <circle cx=\"1.25\" cy=\"1.25\" r=\"1.25\" />\r\n                </pattern>\r\n            </defs>\r\n            <rect [attr.fill]=\"'url(#' + sliderprogressbarId + ')'\" width=\"100%\" height=\"100%\" />\r\n        </svg>\r\n        <div class=\"mat-slider-track-fill mat-slider-track-buffer\" [ngStyle]=\"_trackBufferStyles\"></div>\r\n        <div class=\"mat-slider-track-fill\" [ngStyle]=\"_trackFillStyles\"></div>\r\n    </div>\r\n    <div class=\"mat-slider-ticks-container\" [ngStyle]=\"_ticksContainerStyles\">\r\n        <div class=\"mat-slider-ticks\" [ngStyle]=\"_ticksStyles\"></div>\r\n    </div>\r\n    <div class=\"mat-slider-thumb-container\" [ngStyle]=\"_thumbContainerStyles\">\r\n        <div class=\"mat-slider-focus-ring\"></div>\r\n        <div class=\"mat-slider-thumb\"></div>\r\n        <div class=\"mat-slider-thumb-label\">\r\n            <span class=\"mat-slider-thumb-label-text\">{{displayValue}}</span>\r\n        </div>\r\n    </div>\r\n</div>`,\r\n    styles: [`:host{width:100%}.mat-slider-progress-background{position:absolute;height:2px;width:100%;fill:#d3d3d3}.mat-slider-track-buffer{background-color:#d3d3d3!important}.mat-slider-thumb{border-color:transparent!important;visibility:hidden;opacity:0;-webkit-transition:visibility 0s .2s,opacity .2s linear;transition:visibility 0s .2s,opacity .2s linear}:host:hover .mat-slider-thumb{visibility:visible;opacity:1;-webkit-transition:opacity .2s linear;transition:opacity .2s linear}`],\r\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n    host: {\r\n        '(focus)': '_onFocus()',\r\n        '(blur)': '_onBlur()',\r\n        '(click)': '_onClick($event)',\r\n        '(keydown)': '_onKeydown($event)',\r\n        '(keyup)': '_onKeyup()',\r\n        '(mouseenter)': '_onMouseenter()',\r\n        '(slide)': '_onSlide($event)',\r\n        '(slideend)': '_onSlideEnd()',\r\n        '(slidestart)': '_onSlideStart($event)',\r\n        'class': 'mat-slider',\r\n        'role': 'slider',\r\n        '[tabIndex]': 'tabIndex',\r\n        '[attr.aria-disabled]': 'disabled',\r\n        '[attr.aria-valuemax]': 'max',\r\n        '[attr.aria-valuemin]': 'min',\r\n        '[attr.aria-valuenow]': 'value',\r\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n        '[class.mat-slider-disabled]': 'disabled',\r\n        '[class.mat-slider-has-ticks]': 'tickInterval',\r\n        '[class.mat-slider-horizontal]': '!vertical',\r\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n        '[class.mat-slider-sliding]': '_isSliding',\r\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n        '[class.mat-slider-vertical]': 'vertical',\r\n        '[class.mat-slider-min-value]': '_isMinValue',\r\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n    },\r\n    inputs: ['disabled', 'color', 'tabIndex'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class MatSliderProgressBarComponent extends MatSlider {\r\n    @Input() mode: string = 'buffer';\r\n    @Input() value: number = 0;\r\n    /** Buffer value of the progress bar. Defaults to zero. */\r\n    @Input()\r\n    get bufferValue(): number { return this._bufferValue; }\r\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\r\n    private _bufferValue: number = 0;\r\n\r\n    /** The id of the progress bar. */\r\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\r\n\r\n    constructor(\r\n        elementRef: ElementRef,\r\n        focusMonitor: FocusMonitor,\r\n        changeDetectorRef: ChangeDetectorRef,\r\n        @Optional() dir: Directionality,\r\n        @Attribute('tabindex') tabIndex: string\r\n    ) {\r\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n    }\r\n\r\n    /** CSS styles for the track fill element. */\r\n    get _trackBufferStyles(): { [key: string]: string } {\r\n        if (this.mode === 'buffer') {\r\n            const axis = this.vertical ? 'Y' : 'X';\r\n            return {\r\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n    return Math.max(min, Math.min(max, v));\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'secondsToTime'\r\n})\r\nexport class SecondsToTimePipe implements PipeTransform {\r\n    times = {\r\n        year: 31557600,\r\n        month: 2629746,\r\n        day: 86400,\r\n        hour: 3600,\r\n    };\r\n\r\n    transform(seconds: number) {\r\n        if (!seconds)\r\n            return '0:00';\r\n        else {\r\n            let time_string: string = '';\r\n            for (const key in this.times) {\r\n                if (Math.floor(seconds / this.times[key]) > 0) {\r\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\r\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\r\n                }\r\n            }\r\n            time_string += Math.floor(seconds / 60).toString() + ':';\r\n            seconds = seconds - 60 * Math.floor(seconds / 60);\r\n            if (Math.floor(seconds) < 10) time_string += '0';\r\n            time_string += Math.floor(seconds).toString();\r\n            return time_string;\r\n        }\r\n    }\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\r\n\r\n@Injectable()\r\nexport class FullscreenService {\r\n\r\n    private fnMap: string[][] = [\r\n        // Object keys\r\n        [\r\n            'requestFullscreen',\r\n            'exitFullscreen',\r\n            'fullscreenElement',\r\n            'fullscreenEnabled',\r\n            'fullscreenchange',\r\n            'fullscreenerror'\r\n        ],\r\n        // New WebKit\r\n        [\r\n            'webkitRequestFullscreen',\r\n            'webkitExitFullscreen',\r\n            'webkitFullscreenElement',\r\n            'webkitFullscreenEnabled',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Old WebKit (Safari 5.1)\r\n        [\r\n            'webkitRequestFullScreen',\r\n            'webkitCancelFullScreen',\r\n            'webkitCurrentFullScreenElement',\r\n            'webkitCancelFullScreen',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Mozilla\r\n        [\r\n            'mozRequestFullScreen',\r\n            'mozCancelFullScreen',\r\n            'mozFullScreenElement',\r\n            'mozFullScreenEnabled',\r\n            'mozfullscreenchange',\r\n            'mozfullscreenerror'\r\n        ],\r\n        // MS\r\n        [\r\n            'msRequestFullscreen',\r\n            'msExitFullscreen',\r\n            'msFullscreenElement',\r\n            'msFullscreenEnabled',\r\n            'MSFullscreenChange',\r\n            'MSFullscreenError'\r\n        ]\r\n    ];\r\n\r\n    private fn: FullscreenControls;\r\n    private keyboardAllowed: boolean;\r\n\r\n    constructor() {\r\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\r\n        const ret: any = {};\r\n        let val;\r\n\r\n        for (let i = 0; i < this.fnMap.length; i++) {\r\n            val = this.fnMap[i];\r\n            if (val && val[1] in document) {\r\n                for (i = 0; i < val.length; i++) {\r\n                    // Map everything to the first list of keys\r\n                    ret[this.fnMap[0][i].toString()] = val[i];\r\n                }\r\n                this.fn = ret;\r\n            }\r\n        }\r\n    }\r\n\r\n    public request(elem: any) {\r\n        const request = this.fn.requestFullscreen;\r\n\r\n        elem = elem || document.documentElement;\r\n\r\n        // Work around Safari 5.1 bug: reports support for\r\n        // keyboard in fullscreen even though it doesn't.\r\n        // Browser sniffing, since the alternative with\r\n        // setTimeout is even worse.\r\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\r\n            elem[request]();\r\n        } else {\r\n            elem[request](this.keyboardAllowed && (Element as any).ALLOW_KEYBOARD_INPUT);\r\n        }\r\n    }\r\n\r\n    public exit() {\r\n        document[this.fn.exitFullscreen]();\r\n    }\r\n\r\n    public toggle(elem: any) {\r\n        if (this.isFullscreen()) {\r\n            this.exit();\r\n        } else {\r\n            this.request(elem);\r\n        }\r\n    }\r\n\r\n    public onChange(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\r\n    }\r\n\r\n    public onError(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\r\n    }\r\n\r\n    public isFullscreen() {\r\n        return Boolean(document[this.fn.fullscreenElement]);\r\n    }\r\n\r\n    public isEnabled() {\r\n        // Coerce to boolean in case of old WebKit\r\n        return Boolean(document[this.fn.fullscreenEnabled]);\r\n    }\r\n\r\n    public getElement() {\r\n        return document[this.fn.fullscreenElement];\r\n    }\r\n\r\n}\r\n",
    "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-download-button',\r\n  template: `<a mat-icon-button [href]=\"video?.currentSrc\" [download]=\"title\">\r\n  <mat-icon>file_download</mat-icon>\r\n</a>`,\r\n  styles: [`a{color:inherit;text-decoration:none}`]\r\n})\r\nexport class MatDownloadButtonComponent {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() title: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
    "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { EventService } from '../../services/event.service';\r\nimport { FullscreenService } from '../../services/fullscreen.service';\r\n\r\n@Component({\r\n  selector: 'mat-fullscreen-button',\r\n  template: `<button mat-icon-button [disabled]=\"!canFullscreen\" (click)=\"toggleFullscreen()\">\r\n  <mat-icon *ngIf=\"!fullscreen\">fullscreen</mat-icon>\r\n  <mat-icon *ngIf=\"fullscreen\">fullscreen_exit</mat-icon>\r\n</button>`,\r\n  styles: [``]\r\n})\r\nexport class MatFullscreenButtonComponent implements OnInit {\r\n  canFullscreen: boolean = false;\r\n\r\n  @Input() player: HTMLVideoElement;\r\n\r\n  @Input() fullscreen: boolean = false;\r\n\r\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private fscreen: FullscreenService,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.fscreen.isEnabled())\r\n      this.canFullscreen = true;\r\n\r\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\r\n  }\r\n\r\n  setFullscreen(value: boolean) {\r\n    if (this.canFullscreen && this.fullscreen !== value)\r\n      this.toggleFullscreen();\r\n  }\r\n\r\n  toggleFullscreen(): void {\r\n    this.fullscreen = !this.fullscreen;\r\n    this.updateFullscreen();\r\n  }\r\n\r\n  updateFullscreen(): void {\r\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  onChangesFullscreen(value: boolean): void {\r\n    this.fullscreen = value;\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  @HostListener('document:keyup.f', ['$event'])\r\n  onFullscreenKey(event: KeyboardEvent) {\r\n    this.toggleFullscreen();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-play-button',\r\n  template: `<button mat-icon-button (click)=\"toggleVideoPlayback()\">\r\n  <mat-icon *ngIf=\"!play\">play_arrow</mat-icon>\r\n  <mat-icon *ngIf=\"play\">pause</mat-icon>\r\n</button>`,\r\n  styles: [``]\r\n})\r\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  @Input() play: boolean = false;\r\n\r\n  @Output() playChanged = new EventEmitter<boolean>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\r\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  setVideoPlayback(value: boolean) {\r\n    if (this.play !== value)\r\n      this.toggleVideoPlayback();\r\n  }\r\n\r\n  toggleVideoPlayback(): void {\r\n    this.play = !this.play;\r\n    this.updateVideoPlayback();\r\n  }\r\n\r\n  updateVideoPlayback(): void {\r\n    this.play ? this.video.play() : this.video.pause();\r\n    this.playChanged.emit(this.play);\r\n  }\r\n\r\n  @HostListener('document:keyup.space', ['$event'])\r\n  onPlayKey(event: KeyboardEvent) {\r\n    this.toggleVideoPlayback();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-quality-control',\r\n  template: `<div class=\"quality\">\r\n  {{ video?.videoHeight }}p\r\n</div>`,\r\n  styles: [`.quality{display:inline-block;font-size:12px;padding-left:12px;padding-right:12px}`]\r\n})\r\nexport class MatQualityControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-seek-progress-control',\r\n  template: `<mat-slider-progress-bar [color]=\"color\" mode=\"buffer\" step=\"0.01\" [value]=\"curTimePercent\" [bufferValue]=\"bufTimePercent\"\n  (input)=\"seekVideo($event.value)\"></mat-slider-progress-bar>`,\r\n  styles: [``]\r\n})\r\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\r\n  curTimePercent: number = 0;\r\n  bufTimePercent: number = 0;\r\n\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() currentTime: number = 0;\r\n\r\n  @Output() currentTimeChanged = new EventEmitter<number>();\r\n\r\n  @Input() bufferedTime: number = 0;\r\n\r\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\r\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  seekVideo(value: number): void {\r\n    const percentage = value / 100;\r\n    const newTime = this.video.duration * percentage;\r\n    this.video.currentTime = newTime;\r\n  }\r\n\r\n  updateCurrentTime(time: number): void {\r\n    this.currentTime = time;\r\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\r\n  }\r\n\r\n  updateBufferedTime(): void {\r\n    if (this.video.buffered.length > 0) {\r\n      let largestBufferValue = 0;\r\n      for (let i = 0; i < this.video.buffered.length; i++) {\r\n        const cur = this.video.currentTime;\r\n        const start = this.video.buffered.start(i);\r\n        const end = this.video.buffered.end(i);\r\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\r\n          largestBufferValue = end;\r\n      }\r\n      this.bufferedTime = largestBufferValue;\r\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\r\n    }\r\n  }\r\n\r\n  updateTime(emitter: EventEmitter<number>, time: number): number {\r\n    emitter.emit(time);\r\n    return time / this.video.duration * 100;\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-time-control',\r\n  template: `<div class=\"playtime\">\r\n  {{ video?.currentTime | secondsToTime }} / {{ video?.duration | secondsToTime}}\r\n</div>`,\r\n  styles: [`.playtime{display:inline;font-size:12px}`]\r\n})\r\nexport class MatTimeControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-video-spinner',\r\n  template: `<div *ngIf=\"!videoLoaded || videoBuffering\" [class]=\"spinner\"></div>`,\r\n  styles: [`:host{position:absolute;left:calc(50% - 32px);top:calc(50% - 32px);z-index:1}`, `.spin{-webkit-box-sizing:border-box;box-sizing:border-box;width:64px;height:64px;border-radius:100%;border:10px solid rgba(255,255,255,.2);border-top-color:#fff;-webkit-animation:1s linear infinite spin;animation:1s linear infinite spin}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`, `.dot{width:64px;height:64px;background-color:#fff;border-radius:100%;-webkit-animation:1s ease-in-out infinite dot;animation:1s ease-in-out infinite dot}@-webkit-keyframes dot{0%{-webkit-transform:scale(0)}100%{-webkit-transform:scale(1);opacity:0}}@keyframes dot{0%{-webkit-transform:scale(0);transform:scale(0)}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}`, `.split-ring{display:inline-block;width:64px;height:64px}.split-ring:after{content:\" \";display:block;width:46px;height:46px;margin:1px;border-radius:50%;border:5px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s linear infinite split-ring;animation:1.2s linear infinite split-ring}@-webkit-keyframes split-ring{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes split-ring{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`, `.hourglass{display:inline-block;position:relative;width:64px;height:64px}.hourglass:after{content:\" \";display:block;border-radius:50%;width:0;height:0;margin:6px;-webkit-box-sizing:border-box;box-sizing:border-box;border:26px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s infinite hourglass;animation:1.2s infinite hourglass}@-webkit-keyframes hourglass{0%{-webkit-transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg)}}@keyframes hourglass{0%{-webkit-transform:rotate(0);transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg);transform:rotate(720deg)}}`]\r\n})\r\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() spinner: string = 'spin';\r\n\r\n  videoBuffering = false;\r\n  videoLoaded = false;\r\n\r\n  private events: EventHandler[] = [];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\r\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\r\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n}\r\n",
    "import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-volume-control',\r\n  template: `<div class=\"volume-control\">\r\n  <button mat-icon-button (click)=\"toggleMuted()\">\r\n    <mat-icon *ngIf=\"muted || volume === 0\">volume_off</mat-icon>\r\n    <mat-icon *ngIf=\"!muted && volume > 0 && volume < 0.25\">volume_mute</mat-icon>\r\n    <mat-icon *ngIf=\"!muted && volume >= 0.25 && volume < 0.5\">volume_down</mat-icon>\r\n    <mat-icon *ngIf=\"!muted && volume >= 0.5\">volume_up</mat-icon>\r\n  </button>\r\n  <mat-slider class=\"volume-slider\" [color]=\"color\" min=\"0\" max=\"1\" step=\"0.01\" value=\"1\" (input)=\"setVolume($event.value)\">\r\n  </mat-slider>\r\n</div>`,\r\n  styles: [`.volume-control{display:inline}.volume-slider{margin-left:-15px}::ng-deep.mat-slider-thumb{border-color:transparent!important}::ng-deep.mat-slider-track-background{background-color:#d3d3d3!important;-webkit-transform:translateX(0)!important;transform:translateX(0)!important}.volume-control .volume-slider{visibility:hidden;opacity:0;min-width:0;width:0;-webkit-transition:visibility 0s .2s,opacity .2s linear,width .2s linear;transition:visibility 0s .2s,opacity .2s linear,width .2s linear}.volume-control:hover .volume-slider{visibility:visible;opacity:1;min-width:90px;width:90px;-webkit-transition:opacity .2s linear,width .2s linear,min-width .2s linear;transition:opacity .2s linear,width .2s linear,min-width .2s linear}`]\r\n})\r\nexport class MatVolumeControlComponent {\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() volume: number = 1;\r\n\r\n  @Output() volumeChanged = new EventEmitter<number>();\r\n\r\n  @Input() muted: boolean = false;\r\n\r\n  @Output() mutedChanged = new EventEmitter<boolean>();\r\n\r\n  constructor(private evt: EventService) { }\r\n\r\n  setVolume(value: number): void {\r\n    this.volume = value;\r\n    this.video.volume = this.volume;\r\n    this.volumeChanged.emit(this.volume);\r\n\r\n    if (this.volume > 0)\r\n      this.setMuted(false);\r\n  }\r\n\r\n  setMuted(value: boolean): void {\r\n    if (this.muted !== value)\r\n      this.toggleMuted();\r\n  }\r\n\r\n  toggleMuted(): void {\r\n    this.muted = !this.muted;\r\n    this.updateMuted();\r\n  }\r\n\r\n  updateMuted(): void {\r\n    this.video.muted = this.muted;\r\n    this.mutedChanged.emit(this.muted);\r\n  }\r\n\r\n  @HostListener('document:keyup.m', ['$event'])\r\n  onMuteKey(event: KeyboardEvent) {\r\n    this.toggleMuted();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
    "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule, MatIconModule, MatSliderModule } from '@angular/material';\r\n\r\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\r\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\r\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\r\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\r\nimport { EventService } from './services/event.service';\r\nimport { FullscreenService } from './services/fullscreen.service';\r\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\r\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\r\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\r\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\r\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\r\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\r\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\r\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\r\nimport { MatVideoComponent } from './video.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SecondsToTimePipe,\r\n        MatVideoComponent,\r\n        MatSliderProgressBarComponent,\r\n        MatPlayButtonComponent,\r\n        MatVolumeControlComponent,\r\n        MatDownloadButtonComponent,\r\n        MatFullscreenButtonComponent,\r\n        MatTimeControlComponent,\r\n        MatQualityControlComponent,\r\n        MatVideoSpinnerComponent,\r\n        MatSeekProgressControlComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatSliderModule\r\n    ],\r\n    exports: [\r\n        MatVideoComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    providers: [\r\n        FullscreenService,\r\n        EventService\r\n    ]\r\n})\r\nexport class MatVideoModule { }\r\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__values",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "call",
    "next",
    "length",
    "value",
    "done",
    "EventService",
    "prototype",
    "addEvents",
    "renderer",
    "events",
    "_loop_1",
    "event",
    "dispose",
    "listen",
    "element",
    "name",
    "newEvent",
    "callback",
    "events_1",
    "tslib_1.__values",
    "events_1_1",
    "removeEvents",
    "events_2",
    "events_2_1",
    "type",
    "Injectable",
    "MatVideoComponent",
    "evt",
    "this",
    "src",
    "title",
    "autoplay",
    "preload",
    "loop",
    "quality",
    "fullscreen",
    "download",
    "color",
    "spinner",
    "poster",
    "playing",
    "isFullscreen",
    "videoLoaded",
    "isMouseMoving",
    "isMouseMovingTimeout",
    "ngAfterViewInit",
    "_this",
    "video",
    "nativeElement",
    "evLoadedMetadata",
    "console",
    "error",
    "preventDefault",
    "player",
    "evMouseMove",
    "ngOnDestroy",
    "load",
    "getVideoTag",
    "videoWidth",
    "videoHeight",
    "clearTimeout",
    "isMouseMovingTimer",
    "setTimeout",
    "getOverlayClass",
    "activeClass",
    "inactiveClass",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "Renderer2",
    "ViewChild",
    "Input",
    "MatVideoSourceDirective",
    "matVideoComponent",
    "el",
    "init",
    "source",
    "ngOnChanges",
    "changes",
    "Directive",
    "decorators",
    "Host",
    "ElementRef",
    "MatVideoTrackDirective",
    "kind",
    "srclang",
    "label",
    "track",
    "sliderprogressbarId",
    "MatSliderProgressBarComponent",
    "_super",
    "elementRef",
    "focusMonitor",
    "changeDetectorRef",
    "dir",
    "tabIndex",
    "mode",
    "_bufferValue",
    "parseInt",
    "__",
    "constructor",
    "create",
    "tslib_1.__extends",
    "defineProperty",
    "get",
    "set",
    "v",
    "min",
    "max",
    "Math",
    "clamp",
    "axis",
    "vertical",
    "transform",
    "MatSlider",
    "providers",
    "MAT_SLIDER_VALUE_ACCESSOR",
    "host",
    "(focus)",
    "(blur)",
    "(click)",
    "(keydown)",
    "(keyup)",
    "(mouseenter)",
    "(slide)",
    "(slideend)",
    "(slidestart)",
    "class",
    "role",
    "[tabIndex]",
    "[attr.aria-disabled]",
    "[attr.aria-valuemax]",
    "[attr.aria-valuemin]",
    "[attr.aria-valuenow]",
    "[attr.aria-orientation]",
    "[class.mat-slider-disabled]",
    "[class.mat-slider-has-ticks]",
    "[class.mat-slider-horizontal]",
    "[class.mat-slider-axis-inverted]",
    "[class.mat-slider-sliding]",
    "[class.mat-slider-thumb-label-showing]",
    "[class.mat-slider-vertical]",
    "[class.mat-slider-min-value]",
    "[class.mat-slider-hide-last-tick]",
    "inputs",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "FocusMonitor",
    "ChangeDetectorRef",
    "Directionality",
    "Optional",
    "String",
    "Attribute",
    "bufferValue",
    "SecondsToTimePipe",
    "times",
    "year",
    "month",
    "day",
    "hour",
    "seconds",
    "time_string",
    "key",
    "floor",
    "toString",
    "Pipe",
    "FullscreenService",
    "fnMap",
    "keyboardAllowed",
    "Element",
    "val",
    "ret",
    "document",
    "fn",
    "request",
    "elem",
    "requestFullscreen",
    "documentElement",
    "test",
    "navigator",
    "userAgent",
    "ALLOW_KEYBOARD_INPUT",
    "exit",
    "exitFullscreen",
    "toggle",
    "onChange",
    "addEventListener",
    "fullscreenchange",
    "onError",
    "fullscreenerror",
    "Boolean",
    "fullscreenElement",
    "isEnabled",
    "fullscreenEnabled",
    "getElement",
    "MatDownloadButtonComponent",
    "MatFullscreenButtonComponent",
    "fscreen",
    "canFullscreen",
    "fullscreenChanged",
    "EventEmitter",
    "ngOnInit",
    "onChangesFullscreen",
    "setFullscreen",
    "toggleFullscreen",
    "updateFullscreen",
    "emit",
    "onFullscreenKey",
    "Output",
    "HostListener",
    "MatPlayButtonComponent",
    "play",
    "playChanged",
    "setVideoPlayback",
    "toggleVideoPlayback",
    "updateVideoPlayback",
    "pause",
    "onPlayKey",
    "MatQualityControlComponent",
    "MatSeekProgressControlComponent",
    "curTimePercent",
    "bufTimePercent",
    "currentTime",
    "currentTimeChanged",
    "bufferedTime",
    "bufferedTimeChanged",
    "updateCurrentTime",
    "updateBufferedTime",
    "seekVideo",
    "percentage",
    "newTime",
    "duration",
    "time",
    "updateTime",
    "buffered",
    "largestBufferValue",
    "cur",
    "start",
    "end",
    "emitter",
    "MatTimeControlComponent",
    "MatVideoSpinnerComponent",
    "videoBuffering",
    "MatVolumeControlComponent",
    "volume",
    "volumeChanged",
    "muted",
    "mutedChanged",
    "setVolume",
    "setMuted",
    "toggleMuted",
    "updateMuted",
    "onMuteKey",
    "MatVideoModule",
    "NgModule",
    "declarations",
    "imports",
    "CommonModule",
    "MatIconModule",
    "MatButtonModule",
    "MatSliderModule",
    "exports"
  ],
  "mappings": "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"
}
