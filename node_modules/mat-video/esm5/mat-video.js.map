{
  "version": 3,
  "file": "mat-video.js",
  "sources": [
    "ng://mat-video/out/app/video/video.module.ts",
    "ng://mat-video/out/app/video/ui/mat-volume-control/mat-volume-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-video-spinner/mat-video-spinner.component.ts",
    "ng://mat-video/out/app/video/ui/mat-time-control/mat-time-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-quality-control/mat-quality-control.component.ts",
    "ng://mat-video/out/app/video/ui/mat-play-button/mat-play-button.component.ts",
    "ng://mat-video/out/app/video/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts",
    "ng://mat-video/out/app/video/ui/mat-download-button/mat-download-button.component.ts",
    "ng://mat-video/out/app/video/services/fullscreen.service.ts",
    "ng://mat-video/out/app/video/pipes/seconds-to-time.pipe.ts",
    "ng://mat-video/out/app/video/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts",
    "ng://mat-video/out/app/video/directives/mat-video-track.directive.ts",
    "ng://mat-video/out/app/video/directives/mat-video-source.directive.ts",
    "ng://mat-video/out/app/video/video.component.ts",
    "ng://mat-video/out/app/video/services/event.service.ts"
  ],
  "sourcesContent": [
    "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule, MatIconModule, MatSliderModule } from '@angular/material';\r\n\r\nimport { MatVideoSourceDirective } from './directives/mat-video-source.directive';\r\nimport { MatVideoTrackDirective } from './directives/mat-video-track.directive';\r\nimport { MatSliderProgressBarComponent } from './internal/mat-slider-progress-bar/mat-slider-progress-bar.component';\r\nimport { SecondsToTimePipe } from './pipes/seconds-to-time.pipe';\r\nimport { EventService } from './services/event.service';\r\nimport { FullscreenService } from './services/fullscreen.service';\r\nimport { MatDownloadButtonComponent } from './ui/mat-download-button/mat-download-button.component';\r\nimport { MatFullscreenButtonComponent } from './ui/mat-fullscreen-button/mat-fullscreen-button.component';\r\nimport { MatPlayButtonComponent } from './ui/mat-play-button/mat-play-button.component';\r\nimport { MatQualityControlComponent } from './ui/mat-quality-control/mat-quality-control.component';\r\nimport { MatSeekProgressControlComponent } from './ui/mat-seek-progress-control/mat-seek-progress-control.component';\r\nimport { MatTimeControlComponent } from './ui/mat-time-control/mat-time-control.component';\r\nimport { MatVideoSpinnerComponent } from './ui/mat-video-spinner/mat-video-spinner.component';\r\nimport { MatVolumeControlComponent } from './ui/mat-volume-control/mat-volume-control.component';\r\nimport { MatVideoComponent } from './video.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SecondsToTimePipe,\r\n        MatVideoComponent,\r\n        MatSliderProgressBarComponent,\r\n        MatPlayButtonComponent,\r\n        MatVolumeControlComponent,\r\n        MatDownloadButtonComponent,\r\n        MatFullscreenButtonComponent,\r\n        MatTimeControlComponent,\r\n        MatQualityControlComponent,\r\n        MatVideoSpinnerComponent,\r\n        MatSeekProgressControlComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatSliderModule\r\n    ],\r\n    exports: [\r\n        MatVideoComponent,\r\n        MatVideoSourceDirective,\r\n        MatVideoTrackDirective\r\n    ],\r\n    providers: [\r\n        FullscreenService,\r\n        EventService\r\n    ]\r\n})\r\nexport class MatVideoModule { }\r\n",
    "import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-volume-control',\r\n  template: `<div class=\"volume-control\">\r\n  <button mat-icon-button (click)=\"toggleMuted()\">\r\n    <mat-icon *ngIf=\"muted || volume === 0\">volume_off</mat-icon>\r\n    <mat-icon *ngIf=\"!muted && volume > 0 && volume < 0.25\">volume_mute</mat-icon>\r\n    <mat-icon *ngIf=\"!muted && volume >= 0.25 && volume < 0.5\">volume_down</mat-icon>\r\n    <mat-icon *ngIf=\"!muted && volume >= 0.5\">volume_up</mat-icon>\r\n  </button>\r\n  <mat-slider class=\"volume-slider\" [color]=\"color\" min=\"0\" max=\"1\" step=\"0.01\" value=\"1\" (input)=\"setVolume($event.value)\">\r\n  </mat-slider>\r\n</div>`,\r\n  styles: [`.volume-control{display:inline}.volume-slider{margin-left:-15px}::ng-deep.mat-slider-thumb{border-color:transparent!important}::ng-deep.mat-slider-track-background{background-color:#d3d3d3!important;-webkit-transform:translateX(0)!important;transform:translateX(0)!important}.volume-control .volume-slider{visibility:hidden;opacity:0;min-width:0;width:0;-webkit-transition:visibility 0s .2s,opacity .2s linear,width .2s linear;transition:visibility 0s .2s,opacity .2s linear,width .2s linear}.volume-control:hover .volume-slider{visibility:visible;opacity:1;min-width:90px;width:90px;-webkit-transition:opacity .2s linear,width .2s linear,min-width .2s linear;transition:opacity .2s linear,width .2s linear,min-width .2s linear}`]\r\n})\r\nexport class MatVolumeControlComponent {\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() volume: number = 1;\r\n\r\n  @Output() volumeChanged = new EventEmitter<number>();\r\n\r\n  @Input() muted: boolean = false;\r\n\r\n  @Output() mutedChanged = new EventEmitter<boolean>();\r\n\r\n  constructor(private evt: EventService) { }\r\n\r\n  setVolume(value: number): void {\r\n    this.volume = value;\r\n    this.video.volume = this.volume;\r\n    this.volumeChanged.emit(this.volume);\r\n\r\n    if (this.volume > 0)\r\n      this.setMuted(false);\r\n  }\r\n\r\n  setMuted(value: boolean): void {\r\n    if (this.muted !== value)\r\n      this.toggleMuted();\r\n  }\r\n\r\n  toggleMuted(): void {\r\n    this.muted = !this.muted;\r\n    this.updateMuted();\r\n  }\r\n\r\n  updateMuted(): void {\r\n    this.video.muted = this.muted;\r\n    this.mutedChanged.emit(this.muted);\r\n  }\r\n\r\n  @HostListener('document:keyup.m', ['$event'])\r\n  onMuteKey(event: KeyboardEvent) {\r\n    this.toggleMuted();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-video-spinner',\r\n  template: `<div *ngIf=\"!videoLoaded || videoBuffering\" [class]=\"spinner\"></div>`,\r\n  styles: [`:host{position:absolute;left:calc(50% - 32px);top:calc(50% - 32px);z-index:1}`, `.spin{-webkit-box-sizing:border-box;box-sizing:border-box;width:64px;height:64px;border-radius:100%;border:10px solid rgba(255,255,255,.2);border-top-color:#fff;-webkit-animation:1s linear infinite spin;animation:1s linear infinite spin}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`, `.dot{width:64px;height:64px;background-color:#fff;border-radius:100%;-webkit-animation:1s ease-in-out infinite dot;animation:1s ease-in-out infinite dot}@-webkit-keyframes dot{0%{-webkit-transform:scale(0)}100%{-webkit-transform:scale(1);opacity:0}}@keyframes dot{0%{-webkit-transform:scale(0);transform:scale(0)}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}`, `.split-ring{display:inline-block;width:64px;height:64px}.split-ring:after{content:\" \";display:block;width:46px;height:46px;margin:1px;border-radius:50%;border:5px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s linear infinite split-ring;animation:1.2s linear infinite split-ring}@-webkit-keyframes split-ring{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes split-ring{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`, `.hourglass{display:inline-block;position:relative;width:64px;height:64px}.hourglass:after{content:\" \";display:block;border-radius:50%;width:0;height:0;margin:6px;-webkit-box-sizing:border-box;box-sizing:border-box;border:26px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s infinite hourglass;animation:1.2s infinite hourglass}@-webkit-keyframes hourglass{0%{-webkit-transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg)}}@keyframes hourglass{0%{-webkit-transform:rotate(0);transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg);transform:rotate(720deg)}}`]\r\n})\r\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() spinner: string = 'spin';\r\n\r\n  videoBuffering = false;\r\n  videoLoaded = false;\r\n\r\n  private events: EventHandler[] = [];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n      { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\r\n      { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\r\n      { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-time-control',\r\n  template: `<div class=\"playtime\">\r\n  {{ video?.currentTime | secondsToTime }} / {{ video?.duration | secondsToTime}}\r\n</div>`,\r\n  styles: [`.playtime{display:inline;font-size:12px}`]\r\n})\r\nexport class MatTimeControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-seek-progress-control',\r\n  template: `<mat-slider-progress-bar [color]=\"color\" mode=\"buffer\" step=\"0.01\" [value]=\"curTimePercent\" [bufferValue]=\"bufTimePercent\"\n  (input)=\"seekVideo($event.value)\"></mat-slider-progress-bar>`,\r\n  styles: [``]\r\n})\r\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\r\n  curTimePercent: number = 0;\r\n  bufTimePercent: number = 0;\r\n\r\n  @Input() video: HTMLVideoElement = null;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  @Input() currentTime: number = 0;\r\n\r\n  @Output() currentTimeChanged = new EventEmitter<number>();\r\n\r\n  @Input() bufferedTime: number = 0;\r\n\r\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\r\n      { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n      { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  seekVideo(value: number): void {\r\n    const percentage = value / 100;\r\n    const newTime = this.video.duration * percentage;\r\n    this.video.currentTime = newTime;\r\n  }\r\n\r\n  updateCurrentTime(time: number): void {\r\n    this.currentTime = time;\r\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\r\n  }\r\n\r\n  updateBufferedTime(): void {\r\n    if (this.video.buffered.length > 0) {\r\n      let largestBufferValue = 0;\r\n      for (let i = 0; i < this.video.buffered.length; i++) {\r\n        const cur = this.video.currentTime;\r\n        const start = this.video.buffered.start(i);\r\n        const end = this.video.buffered.end(i);\r\n        if (start <= cur && end > cur && (end - start) > largestBufferValue)\r\n          largestBufferValue = end;\r\n      }\r\n      this.bufferedTime = largestBufferValue;\r\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\r\n    }\r\n  }\r\n\r\n  updateTime(emitter: EventEmitter<number>, time: number): number {\r\n    emitter.emit(time);\r\n    return time / this.video.duration * 100;\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-quality-control',\r\n  template: `<div class=\"quality\">\r\n  {{ video?.videoHeight }}p\r\n</div>`,\r\n  styles: [`.quality{display:inline-block;font-size:12px;padding-left:12px;padding-right:12px}`]\r\n})\r\nexport class MatQualityControlComponent {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
    "import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core';\r\n\r\nimport { EventHandler } from '../../interfaces/event-handler.interface';\r\nimport { EventService } from '../../services/event.service';\r\n\r\n@Component({\r\n  selector: 'mat-play-button',\r\n  template: `<button mat-icon-button (click)=\"toggleVideoPlayback()\">\r\n  <mat-icon *ngIf=\"!play\">play_arrow</mat-icon>\r\n  <mat-icon *ngIf=\"play\">pause</mat-icon>\r\n</button>`,\r\n  styles: [``]\r\n})\r\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\r\n  @Input() video: HTMLVideoElement;\r\n\r\n  @Input() play: boolean = false;\r\n\r\n  @Output() playChanged = new EventEmitter<boolean>();\r\n\r\n  private events: EventHandler[];\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.events = [\r\n      { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\r\n      { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\r\n      { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\r\n    ];\r\n\r\n    this.evt.addEvents(this.renderer, this.events);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.evt.removeEvents(this.events);\r\n  }\r\n\r\n  setVideoPlayback(value: boolean) {\r\n    if (this.play !== value)\r\n      this.toggleVideoPlayback();\r\n  }\r\n\r\n  toggleVideoPlayback(): void {\r\n    this.play = !this.play;\r\n    this.updateVideoPlayback();\r\n  }\r\n\r\n  updateVideoPlayback(): void {\r\n    this.play ? this.video.play() : this.video.pause();\r\n    this.playChanged.emit(this.play);\r\n  }\r\n\r\n  @HostListener('document:keyup.space', ['$event'])\r\n  onPlayKey(event: KeyboardEvent) {\r\n    this.toggleVideoPlayback();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
    "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { EventService } from '../../services/event.service';\r\nimport { FullscreenService } from '../../services/fullscreen.service';\r\n\r\n@Component({\r\n  selector: 'mat-fullscreen-button',\r\n  template: `<button mat-icon-button [disabled]=\"!canFullscreen\" (click)=\"toggleFullscreen()\">\r\n  <mat-icon *ngIf=\"!fullscreen\">fullscreen</mat-icon>\r\n  <mat-icon *ngIf=\"fullscreen\">fullscreen_exit</mat-icon>\r\n</button>`,\r\n  styles: [``]\r\n})\r\nexport class MatFullscreenButtonComponent implements OnInit {\r\n  canFullscreen: boolean = false;\r\n\r\n  @Input() player: HTMLVideoElement;\r\n\r\n  @Input() fullscreen: boolean = false;\r\n\r\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private fscreen: FullscreenService,\r\n    private evt: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.fscreen.isEnabled())\r\n      this.canFullscreen = true;\r\n\r\n    this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\r\n  }\r\n\r\n  setFullscreen(value: boolean) {\r\n    if (this.canFullscreen && this.fullscreen !== value)\r\n      this.toggleFullscreen();\r\n  }\r\n\r\n  toggleFullscreen(): void {\r\n    this.fullscreen = !this.fullscreen;\r\n    this.updateFullscreen();\r\n  }\r\n\r\n  updateFullscreen(): void {\r\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  onChangesFullscreen(value: boolean): void {\r\n    this.fullscreen = value;\r\n    this.fullscreenChanged.emit(this.fullscreen);\r\n  }\r\n\r\n  @HostListener('document:keyup.f', ['$event'])\r\n  onFullscreenKey(event: KeyboardEvent) {\r\n    this.toggleFullscreen();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
    "import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-download-button',\r\n  template: `<a mat-icon-button [href]=\"video?.currentSrc\" [download]=\"title\">\r\n  <mat-icon>file_download</mat-icon>\r\n</a>`,\r\n  styles: [`a{color:inherit;text-decoration:none}`]\r\n})\r\nexport class MatDownloadButtonComponent {\r\n  @Input() video: HTMLVideoElement;\r\n  @Input() title: string;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { FullscreenControls } from '../interfaces/fullscreen-controls.interface';\r\n\r\n@Injectable()\r\nexport class FullscreenService {\r\n\r\n    private fnMap: string[][] = [\r\n        // Object keys\r\n        [\r\n            'requestFullscreen',\r\n            'exitFullscreen',\r\n            'fullscreenElement',\r\n            'fullscreenEnabled',\r\n            'fullscreenchange',\r\n            'fullscreenerror'\r\n        ],\r\n        // New WebKit\r\n        [\r\n            'webkitRequestFullscreen',\r\n            'webkitExitFullscreen',\r\n            'webkitFullscreenElement',\r\n            'webkitFullscreenEnabled',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Old WebKit (Safari 5.1)\r\n        [\r\n            'webkitRequestFullScreen',\r\n            'webkitCancelFullScreen',\r\n            'webkitCurrentFullScreenElement',\r\n            'webkitCancelFullScreen',\r\n            'webkitfullscreenchange',\r\n            'webkitfullscreenerror'\r\n\r\n        ],\r\n        // Mozilla\r\n        [\r\n            'mozRequestFullScreen',\r\n            'mozCancelFullScreen',\r\n            'mozFullScreenElement',\r\n            'mozFullScreenEnabled',\r\n            'mozfullscreenchange',\r\n            'mozfullscreenerror'\r\n        ],\r\n        // MS\r\n        [\r\n            'msRequestFullscreen',\r\n            'msExitFullscreen',\r\n            'msFullscreenElement',\r\n            'msFullscreenEnabled',\r\n            'MSFullscreenChange',\r\n            'MSFullscreenError'\r\n        ]\r\n    ];\r\n\r\n    private fn: FullscreenControls;\r\n    private keyboardAllowed: boolean;\r\n\r\n    constructor() {\r\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\r\n        const ret: any = {};\r\n        let val;\r\n\r\n        for (let i = 0; i < this.fnMap.length; i++) {\r\n            val = this.fnMap[i];\r\n            if (val && val[1] in document) {\r\n                for (i = 0; i < val.length; i++) {\r\n                    // Map everything to the first list of keys\r\n                    ret[this.fnMap[0][i].toString()] = val[i];\r\n                }\r\n                this.fn = ret;\r\n            }\r\n        }\r\n    }\r\n\r\n    public request(elem: any) {\r\n        const request = this.fn.requestFullscreen;\r\n\r\n        elem = elem || document.documentElement;\r\n\r\n        // Work around Safari 5.1 bug: reports support for\r\n        // keyboard in fullscreen even though it doesn't.\r\n        // Browser sniffing, since the alternative with\r\n        // setTimeout is even worse.\r\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\r\n            elem[request]();\r\n        } else {\r\n            elem[request](this.keyboardAllowed && (Element as any).ALLOW_KEYBOARD_INPUT);\r\n        }\r\n    }\r\n\r\n    public exit() {\r\n        document[this.fn.exitFullscreen]();\r\n    }\r\n\r\n    public toggle(elem: any) {\r\n        if (this.isFullscreen()) {\r\n            this.exit();\r\n        } else {\r\n            this.request(elem);\r\n        }\r\n    }\r\n\r\n    public onChange(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\r\n    }\r\n\r\n    public onError(callback: any) {\r\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\r\n    }\r\n\r\n    public isFullscreen() {\r\n        return Boolean(document[this.fn.fullscreenElement]);\r\n    }\r\n\r\n    public isEnabled() {\r\n        // Coerce to boolean in case of old WebKit\r\n        return Boolean(document[this.fn.fullscreenEnabled]);\r\n    }\r\n\r\n    public getElement() {\r\n        return document[this.fn.fullscreenElement];\r\n    }\r\n\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'secondsToTime'\r\n})\r\nexport class SecondsToTimePipe implements PipeTransform {\r\n    times = {\r\n        year: 31557600,\r\n        month: 2629746,\r\n        day: 86400,\r\n        hour: 3600,\r\n    };\r\n\r\n    transform(seconds: number) {\r\n        if (!seconds)\r\n            return '0:00';\r\n        else {\r\n            let time_string: string = '';\r\n            for (const key in this.times) {\r\n                if (Math.floor(seconds / this.times[key]) > 0) {\r\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\r\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\r\n                }\r\n            }\r\n            time_string += Math.floor(seconds / 60).toString() + ':';\r\n            seconds = seconds - 60 * Math.floor(seconds / 60);\r\n            if (Math.floor(seconds) < 10) time_string += '0';\r\n            time_string += Math.floor(seconds).toString();\r\n            return time_string;\r\n        }\r\n    }\r\n}\r\n",
    "import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute } from '@angular/core';\r\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from '@angular/material';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\n\r\n/** Counter used to generate unique IDs for progress bars. */\r\nlet sliderprogressbarId = 0;\r\n\r\n@Component({\r\n    selector: 'mat-slider-progress-bar',\r\n    template: `<div class=\"mat-slider-wrapper\" #sliderWrapper>\r\n    <div class=\"mat-slider-track-wrapper\">\r\n        <svg width=\"100%\" height=\"2\" focusable=\"false\" class=\"mat-slider-progress-background\">\r\n            <defs>\r\n                <pattern [id]=\"sliderprogressbarId\" x=\"2.5\" y=\"0\" width=\"5\" height=\"2.5\" patternUnits=\"userSpaceOnUse\">\r\n                    <circle cx=\"1.25\" cy=\"1.25\" r=\"1.25\" />\r\n                </pattern>\r\n            </defs>\r\n            <rect [attr.fill]=\"'url(#' + sliderprogressbarId + ')'\" width=\"100%\" height=\"100%\" />\r\n        </svg>\r\n        <div class=\"mat-slider-track-fill mat-slider-track-buffer\" [ngStyle]=\"_trackBufferStyles\"></div>\r\n        <div class=\"mat-slider-track-fill\" [ngStyle]=\"_trackFillStyles\"></div>\r\n    </div>\r\n    <div class=\"mat-slider-ticks-container\" [ngStyle]=\"_ticksContainerStyles\">\r\n        <div class=\"mat-slider-ticks\" [ngStyle]=\"_ticksStyles\"></div>\r\n    </div>\r\n    <div class=\"mat-slider-thumb-container\" [ngStyle]=\"_thumbContainerStyles\">\r\n        <div class=\"mat-slider-focus-ring\"></div>\r\n        <div class=\"mat-slider-thumb\"></div>\r\n        <div class=\"mat-slider-thumb-label\">\r\n            <span class=\"mat-slider-thumb-label-text\">{{displayValue}}</span>\r\n        </div>\r\n    </div>\r\n</div>`,\r\n    styles: [`:host{width:100%}.mat-slider-progress-background{position:absolute;height:2px;width:100%;fill:#d3d3d3}.mat-slider-track-buffer{background-color:#d3d3d3!important}.mat-slider-thumb{border-color:transparent!important;visibility:hidden;opacity:0;-webkit-transition:visibility 0s .2s,opacity .2s linear;transition:visibility 0s .2s,opacity .2s linear}:host:hover .mat-slider-thumb{visibility:visible;opacity:1;-webkit-transition:opacity .2s linear;transition:opacity .2s linear}`],\r\n    providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n    host: {\r\n        '(focus)': '_onFocus()',\r\n        '(blur)': '_onBlur()',\r\n        '(click)': '_onClick($event)',\r\n        '(keydown)': '_onKeydown($event)',\r\n        '(keyup)': '_onKeyup()',\r\n        '(mouseenter)': '_onMouseenter()',\r\n        '(slide)': '_onSlide($event)',\r\n        '(slideend)': '_onSlideEnd()',\r\n        '(slidestart)': '_onSlideStart($event)',\r\n        'class': 'mat-slider',\r\n        'role': 'slider',\r\n        '[tabIndex]': 'tabIndex',\r\n        '[attr.aria-disabled]': 'disabled',\r\n        '[attr.aria-valuemax]': 'max',\r\n        '[attr.aria-valuemin]': 'min',\r\n        '[attr.aria-valuenow]': 'value',\r\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n        '[class.mat-slider-disabled]': 'disabled',\r\n        '[class.mat-slider-has-ticks]': 'tickInterval',\r\n        '[class.mat-slider-horizontal]': '!vertical',\r\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n        '[class.mat-slider-sliding]': '_isSliding',\r\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n        '[class.mat-slider-vertical]': 'vertical',\r\n        '[class.mat-slider-min-value]': '_isMinValue',\r\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n    },\r\n    inputs: ['disabled', 'color', 'tabIndex'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class MatSliderProgressBarComponent extends MatSlider {\r\n    @Input() mode: string = 'buffer';\r\n    @Input() value: number = 0;\r\n    /** Buffer value of the progress bar. Defaults to zero. */\r\n    @Input()\r\n    get bufferValue(): number { return this._bufferValue; }\r\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\r\n    private _bufferValue: number = 0;\r\n\r\n    /** The id of the progress bar. */\r\n    sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\r\n\r\n    constructor(\r\n        elementRef: ElementRef,\r\n        focusMonitor: FocusMonitor,\r\n        changeDetectorRef: ChangeDetectorRef,\r\n        @Optional() dir: Directionality,\r\n        @Attribute('tabindex') tabIndex: string\r\n    ) {\r\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n    }\r\n\r\n    /** CSS styles for the track fill element. */\r\n    get _trackBufferStyles(): { [key: string]: string } {\r\n        if (this.mode === 'buffer') {\r\n            const axis = this.vertical ? 'Y' : 'X';\r\n            return {\r\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v: number, min = 0, max = 100) {\r\n    return Math.max(min, Math.min(max, v));\r\n}\r\n",
    "import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { MatVideoComponent } from '../video.component';\r\n\r\n@Directive({\r\n    selector: '[matVideoTrack]'\r\n})\r\nexport class MatVideoTrackDirective implements OnChanges {\r\n    @Input() src: string = null;\r\n    @Input() kind: string = null;\r\n    @Input() srclang: string = null;\r\n    @Input() label: string = null;\r\n\r\n    private init = true;\r\n    private video: MatVideoComponent;\r\n    private track: HTMLTrackElement;\r\n\r\n    constructor(\r\n        @Host() private matVideoComponent: MatVideoComponent,\r\n        private el: ElementRef\r\n    ) {\r\n        this.video = matVideoComponent;\r\n        this.track = el.nativeElement;\r\n        this.init = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.track.src = this.src;\r\n        this.track.kind = this.kind;\r\n        this.track.srclang = this.srclang;\r\n        this.track.label = this.label;\r\n\r\n        if (!this.init)\r\n            this.video.load();\r\n    }\r\n\r\n}\r\n",
    "import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { MatVideoComponent } from '../video.component';\n\n@Directive({\n  selector: '[matVideoSource]'\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(\n    @Host() private matVideoComponent: MatVideoComponent,\n    private el: ElementRef\n  ) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init)\n      this.video.load();\n  }\n\n}\n",
    "import { AfterViewInit, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material';\r\n\r\nimport { EventHandler } from './interfaces/event-handler.interface';\r\nimport { EventService } from './services/event.service';\r\n\r\n@Component({\r\n    selector: 'mat-video',\r\n    template: `<div #player class=\"videoplayer\" [ngClass]=\"getOverlayClass('show-mouse', 'hide-mouse')\">\r\n    <div class=\"header\" *ngIf=\"title\" [ngClass]=\"getOverlayClass('visible', 'hidden')\">\r\n        {{title}}\r\n    </div>\r\n\r\n    <video #video class=\"video\" [attr.src]=\"src ? src : null\" [attr.autoplay]=\"autoplay ? true : null\" [preload]=\"preload ? 'auto' : 'metadata'\"\r\n        [attr.poster]=\"poster ? poster : null\" [attr.loop]=\"loop ? loop : null\">\r\n        <ng-content select=\"source\"></ng-content>\r\n        <ng-content select=\"track\"></ng-content>\r\n        This browser does not support HTML5 video.\r\n    </video>\r\n\r\n    <div class=\"controls\" *ngIf=\"videoLoaded\" [ngClass]=\"getOverlayClass('visible', 'hidden')\">\r\n        <div class=\"progress\">\r\n            <mat-seek-progress-control [color]=\"color\" [video]=\"video\"></mat-seek-progress-control>\r\n        </div>\r\n\r\n        <div class=\"menu\">\r\n            <div class=\"left\">\r\n                <mat-play-button (playChanged)=\"playing = $event\" [video]=\"video\"></mat-play-button>\r\n\r\n                <mat-volume-control [color]=\"color\" [video]=\"video\"></mat-volume-control>\r\n\r\n                <mat-time-control [video]=\"video\"></mat-time-control>\r\n            </div>\r\n\r\n            <div class=\"right\">\r\n                <mat-quality-control *ngIf=\"quality\" [video]=\"video\"></mat-quality-control>\r\n\r\n                <mat-download-button *ngIf=\"download\" [title]=\"title\" [video]=\"video\"></mat-download-button>\r\n\r\n                <mat-fullscreen-button *ngIf=\"fullscreen\" (fullscreenChanged)=\"isFullscreen = $event\" [player]=\"player\"></mat-fullscreen-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <mat-video-spinner [spinner]=\"spinner\" [video]=\"video\"></mat-video-spinner>\r\n</div>`,\r\n    styles: [`.videoplayer{font-family:Roboto,\"Helvetica Neue\",sans-serif;background-color:#000;position:relative;width:100%;height:100%}.header{color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;left:0;top:14px;width:100%;z-index:1}.video{display:block;width:100%;height:100%;z-index:0}.controls{color:#fff;position:absolute;left:0;bottom:0;width:100%;z-index:1}.controls .progress{height:26px}.controls .menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:48px}.controls .menu .left{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.controls .menu .right{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.visible{visibility:visible;opacity:1;-webkit-transition:opacity .5s linear;transition:opacity .5s linear}.hidden{visibility:hidden;opacity:0;-webkit-transition:visibility 0s .5s,opacity .5s linear;transition:visibility 0s .5s,opacity .5s linear}.show-mouse{cursor:default}.hide-mouse{cursor:none}`, `@font-face{font-family:'Material Icons';font-style:normal;font-weight:400;src:url(https://fonts.gstatic.com/s/materialicons/v36/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2) format('woff2')}::ng-deep.material-icons{font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;font-feature-settings:'liga';-webkit-font-feature-settings:'liga';-webkit-font-smoothing:antialiased}`]\r\n})\r\nexport class MatVideoComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild('player') private player: ElementRef;\r\n    @ViewChild('video') private video: ElementRef;\r\n\r\n    @Input() src: string = null;\r\n    @Input() title: string = null;\r\n    @Input() autoplay: boolean = false;\r\n    @Input() preload: boolean = true;\r\n    @Input() loop: boolean = false;\r\n    @Input() quality: boolean = true;\r\n    @Input() fullscreen: boolean = true;\r\n    @Input() download: boolean = false;\r\n    @Input() color: ThemePalette = 'primary';\r\n    @Input() spinner: string = 'spin';\r\n    @Input() poster: string = null;\r\n\r\n    playing: boolean = false;\r\n\r\n    isFullscreen: boolean = false;\r\n\r\n    videoWidth: number;\r\n    videoHeight: number;\r\n\r\n    videoLoaded = false;\r\n\r\n    private isMouseMoving: boolean = false;\r\n    private isMouseMovingTimer: NodeJS.Timer;\r\n    private isMouseMovingTimeout: number = 2000;\r\n\r\n    private events: EventHandler[];\r\n\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private evt: EventService\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.events = [\r\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\r\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\r\n        ];\r\n\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n\r\n    load(): void {\r\n        if (this.video && this.video.nativeElement)\r\n            this.video.nativeElement.load();\r\n    }\r\n\r\n    getVideoTag(): HTMLVideoElement | null {\r\n        return this.video && this.video.nativeElement ? this.video.nativeElement as HTMLVideoElement : null;\r\n    }\r\n\r\n    evLoadedMetadata(event: any): void {\r\n        this.videoWidth = this.video.nativeElement.videoWidth;\r\n        this.videoHeight = this.video.nativeElement.videoHeight;\r\n        this.videoLoaded = true;\r\n    }\r\n\r\n    evMouseMove(event: any): void {\r\n        this.isMouseMoving = true;\r\n        clearTimeout(this.isMouseMovingTimer);\r\n        this.isMouseMovingTimer = setTimeout(() => {\r\n            this.isMouseMoving = false;\r\n        }, this.isMouseMovingTimeout);\r\n    }\r\n\r\n    getOverlayClass(activeClass: string, inactiveClass: string): any {\r\n        return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\r\n    }\r\n\r\n}\r\n",
    "import { Injectable, Renderer2 } from '@angular/core';\r\nimport { EventHandler } from '../interfaces/event-handler.interface';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n    constructor() { }\r\n\r\n    addEvents(renderer: Renderer2, events: EventHandler[]): void {\r\n        for (const event of events)\r\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\r\n    }\r\n\r\n    removeEvents(events: EventHandler[]): void {\r\n        for (const event of events)\r\n            if (event.dispose)\r\n                event.dispose();\r\n    }\r\n\r\n}\r\n"
  ],
  "names": [
    "tslib_1.__extends",
    "tslib_1.__values"
  ],
  "mappings": "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"
}
